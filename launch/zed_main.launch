<?xml version="1.0"?>
<launch>

    <!-- Options -->
    <arg name="use_cuda"            default="true"/>
    <arg name="enable_bbox_image"   default="false"/>
    <arg name="enable_aruco"        default="false"/>
    <arg name="frame_id"            default="map"/>
    <arg name="is_sim"              default="true"/>

    <!-- Auxiliary -->
    <arg name="only_objects"        default=""/>
    <arg name="skip_objects"        default=""/>
    <arg name="max_age"             default="30"/>
    <arg name="aruco_size"          default="0.360"/>
    <rosparam command="load" file="$(find svea_core)/params/obstacles.yaml" />

    <!-- Constants -->
    <arg name="depth_image"     value="/zed/zed_node/depth/depth_registered"/>
    <arg name="image"           value="/zed/zed_node/rgb/image_rect_color"/>
    <arg name="websocket_port"  value="9090"/>

    <arg name="map_img_name" default="$(find svea_core)/maps/floor2.yaml"/>
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_img_name)"/>

    <!-- Nodes -->
    <include file="$(find zed_wrapper)/launch/zed.launch">
        <arg name="camera_name" value="zed"/>
    </include>

    <include file="$(find svea_vision)/launch/object_pose.launch">
        <!-- Options -->
        <arg name="use_cuda"            value="$(arg use_cuda)"/>
        <arg name="enable_bbox_image"   value="$(arg enable_bbox_image)"/>
        <arg name="frame_id"            value="$(arg frame_id)"/>
        <!-- Consumed topics -->
        <arg name="image"               value="$(arg image)"/>
        <arg name="depth_image"         value="$(arg depth_image)"/>
        <!-- Auxiliary -->
        <arg name="only_objects"        value="$(arg only_objects)"/>
        <arg name="skip_objects"        value="$(arg skip_objects)"/>
        <arg name="max_age"             value="$(arg max_age)"/>
    </include>

    <include if="$(arg enable_aruco)" file="$(find svea_vision)/launch/aruco_detect.launch">
        <!-- Consumed topics -->
        <arg name="image"       value="$(arg image)"/>
        <!-- Auxiliary -->
        <arg name="aruco_size"  value="$(arg aruco_size)"/>
    </include>

    <node name="classification_splitter" pkg="infra" type="split_measurement.py" output="screen" ></node>
    <node name="circle_obstacles" pkg="infra" type="transform_obstacles_to_circles.py" output="screen"></node>
    <node name="person_state_estimation" pkg="infra" type="person_state_estimation.py" output="screen"></node>

    <arg name="node_start_delay" default="30.0" />
  
    <node name="merge_measurements" pkg="infra" type="merge_cameras.py" output="screen"></node>
    <node name="pose_array_publisher" pkg="infra" type="posearray_pub.py" output="screen"></node>
    <node name="publish_to_vehicle" pkg="infra" type="car_integration_pub.py" output="screen"></node>
    <node name="publish_to_city" pkg="infra" type="city_roadblock_pub.py" output="screen"></node>
    <node name="people_crosswalk_busstop" pkg="infra" type="people_crosswalk.py" output="screen"></node>

    <!-- FOR CALIBRATION: 
    1. COMMENT "camera2map" NODE AND UNCOMMENT "aruco2map" NODE
    2. READ POSITION OF ARUCO IN WORLD COORDS AND ENTER THEM INTO args = "x y z quatx quaty qautz quatw map aruco[index]" -->
    <node name="camera2map" pkg="infra" type="tf_camera2map.py" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " ></node>
    <!-- <node name ="aruco2map" pkg = "infra" type = "tf_aruco2map.py" output = "screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "></node> -->
    
    <!-- FOR LOGGING: UNCOMMENT NODE -->
    <!-- <node name="path_logger" pkg="infra" type="path_logger.py" output="screen"></node> -->
</launch>
